#!/usr/bin/env python

# -*- coding: utf-8 -*-

# Copyright (C) 1999-2013, Salmaso Raffaele <raffaele@salmaso.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from __future__ import absolute_import, division, print_function, unicode_literals
import os
import os.path
import sys
import getopt
import datetime
import psycopg2

shortopts = 'h:u:w:d:p:a'
longopts = [ 'host=', 'user=', 'password=', 'dest=', 'port=', 'all', 'help', ]

def usage():
    pkgname = os.path.basename(sys.argv[0])
    print('''%(pkgname)s (C) 2009-2013 Salmaso Raffaele
This program is distribuited under the MIT/X license
You are not allowed to remove the copyright notice

Backup PostgreSQL databases

usage: %(pkgname)s <options>

  options:
        --help = show this text
    -h, --host = the hostname (default=localhost)
    -u, --user = the user (default=postgres)
    -w, --password = the user password (default=none)
    -p, --port = the TCP port (default=5432)
    -d, --dest <dir> where to put backup files (default=.)
''' % { 'pkgname': pkgname })
try:
    opts, pkgs = getopt.getopt(sys.argv[1:], shortopts, longopts)
except getopt.GetoptError:
    usage()
    sys.exit(0)

tm = datetime.datetime.now().strftime('%Y%m%d-%H%M%S')
user = 'postgres'
hostname = 'localhost'
password = None
dest = '.'
port = '5432'
all = False

for o, a in opts:
    if o in ('-h', '--host'):
        hostname = a
    elif o in ('-u', '--user'):
        user = a
    elif o in ('-w', '--password'):
        password = a
    elif o in ('-p', '--port'):
        port = a
    elif o in ('-d', '--dest'):
        dest = a
    elif o in ('-a', '--all'):
        all = True
    elif o == '--help':
        usage()
        sys.exit(0)

try:
    conn = psycopg2.connect("dbname='template1' user='%(user)s'" % { 'user': user, 'hostname': hostname});
except Exception as e:
    sys.stderr.write('%s\n' % e)
    sys.stderr.write("I am unable to connect to the database\n")
    sys.exit(1)

cur = conn.cursor()
cur.execute("""SELECT datname FROM pg_database WHERE datname not in ('template0', 'template1', 'postgres')""")
rows = cur.fetchall()
print("\nBackup the PostgreSQL databases:\n")
os.system("""mkdir -p "%(dest)s/%(date)s/" """ % {
    'date': tm,
    'dest': dest,
})
for row in rows:
    print("   %s\n" % row[0])
    os.system("""pg_dump -U %(user)s %(db)s | xz > "%(dest)s/%(date)s/%(db)s_%(date)s.db.xz" """ % {
        'db': row[0],
        'date': tm,
        'user': user,
        'hostname': hostname,
        'dest': dest,
    })

if all:
    print("Dump all databases\n")
    os.system("""/usr/bin/pg_dumpall | xz > "%(dest)s/%(date)s/pg_dump_%(date)s.xz" """ % {
        'date': tm,
        'user': user,
        'hostname': hostname,
        'dest': dest,
    })

