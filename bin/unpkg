#!/usr/bin/env python 

# Copyright (C) 1999-2011, Salmaso Raffaele <raffaele@salmaso.org>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import os
import os.path
import sys
import getopt

shortopts = 'hd:'
longopts = [ 'help', 'dest=' ]
dest = ''
source = os.getcwd()
actions = {
    '.tar.bz' : 'bzip -cd "%s" | tar xvf -',
    '.bz' : 'bzip -d "%s"',
    '.tar.bz2' : 'bzip2 -cd "%s" | tar xvf -',
    '.bz2' : 'bzip2 -d "%s"',
    '.tar.xz' : 'xz -cd "%s" | tar xvf -',
    '.xz' : 'xz -d "%s"',
    '.tar.Z' : 'tar Zxvf "%s"',
    '.taz' : 'tar Zxvf "%s"',
    '.Z' : 'gunzip "%s"',
    '.tar.gz' : 'tar zxvf "%s"',
    '.tgz' : 'tar zxvf "%s"',
    '.bpp': 'tar zxvf "%s"',
    '.etheme' : 'tar zxvf "%s"',
    '.tz' : 'tar zxvf "%s"',
#    '.pax.gz' : 'gunzip "%s" | cpio -i',
#    '.pax' : 'cpio -i < "%s"',
    '.pax.gz' : 'gunzip "%s" | pax -r -pe',
    '.pax' : 'pax -r -pe -f "%s"',
    '.gz' : 'gunzip "%s"',
    '.tar' : 'tar xvf "%s"',
    '.zip' : 'unzip -C "%s"',
    '.cbz' : 'unzip -C "%s"',
    '.xpi' : 'unzip -C "%s"',
    '.deb' : 'alien -t -c -g "%s"',
    '.rpm' : 'alien -t -c -g "%s"',
    '.dsc' : 'dpkg-source -x "%s"',
    '.rom' : 'unzip -C "%s"',
    '.rar' : 'unrar x "%s"',
    '.cbr' : 'unrar x "%s"',
    '.ace' : 'unace e "%s"',
    '.cab' : 'cabextract "%s"',
    '.jar' : 'unzip -C "%s"',
    '.war' : 'unzip -C "%s"',
    '.lha' : 'lha x "%s"',
    '.lhz' : 'lha x "%s"',
    '.7z'  : '7za x "%s"'
}

def usage():
    pkgname = os.path.basename(sys.argv[0])
    sys.stdout.write('''%s (C) 1999-2011 Salmaso Raffaele
This program is distribuited under the MIT/X License
You are not allowed to remove the copyright notice

Uncompress multiple archive files with one command.

usage: %s <options> file1 [file2 ... filen] [target-dir]
  - file* = a list of the files to uncompress
  - target-dir = where to put the uncompressed files

  options:
    -h, --help = show this text
    -d, --dest <dir> where to put the uncompressed files

%s can recognize these extensions:
    .tar.bz .bz .tar.bz2 .bz2 .tar.Z .taz .Z .dsc
    .rom .tz .tar.gz .tgz .bpp .gz .tar .deb .rpm
    .zip .etheme .rar .ace .cab .jar .lha .lhz
    .7z .cbr .cbz .pax.gz .tar.xz .xz
''' % (pkgname, pkgname, pkgname))

if len(sys.argv) < 2:
    usage()
    sys.exit(0)

try:
    opts, pkgs = getopt.getopt(sys.argv[1:], shortopts, longopts)
except getopt.GetoptError:
    usage()
    sys.exit(0)

for o, a in opts:
    if o in ('-d', '--dest'):
        dest = a
    elif o in ('-h', '--help'):
        usage()
        sys.exit(0)

if dest == '':
    if not os.path.isfile(pkgs[-1]):
        dest = pkgs[-1]
        pkgs = pkgs[:-1]
        if dest.endswith('/'):
            dest = dest[:-1]
if dest != '':
    if not os.path.exists(dest):
        os.makedirs(dest)
    os.chdir(dest)

for pkg in pkgs:
    pkg = os.path.join(source, pkg)
    try:
        for k in actions.keys():
            if pkg.endswith(k):
                os.system(actions[k] % pkg)
                raise StopIteration
        sys.stdout.write('package type for %s not supported\n' % pkg)
    except StopIteration:
        pass

